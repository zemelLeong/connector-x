[tool.poetry]
authors = ["SFU Database System Lab <dsl.cs.sfu@gmail.com>"] 
classifiers = [
  "Development Status :: 4 - Beta",
  "Topic :: Software Development :: Build Tools",
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Intended Audience :: Financial and Insurance Industry",
  "Intended Audience :: Healthcare Industry",
  "Topic :: Scientific/Engineering",
  "Framework :: IPython",
] 
description = "Load data from databases to dataframes, the fastest way." 
include = ["connectorx/*.so", "connectorx/*.pyd", "LICENSE"] 
keywords = ["read_sql"] 
license = "MIT" 
maintainers = ["Weiyuan Wu <youngw@sfu.ca>"] 
name = "connectorx" 
readme = "README.md" # Markdown files are supported
version = "0.2.5-alpha.2" 

[tool.poetry.dependencies]
dask = {version = "^2021", optional = true, extras = ["dataframe"]}
modin = {version = ">=0.10", optional = true}
numpy = ">=1.21.5"
pandas = {version = "^1", optional = true}
polars = {version = ">=0.8", optional = true}
pyarrow = {version = ">=4", optional = true}
python = ">=3.7.1,<3.11"

[tool.poetry.extras]
all = ["dask", "pandas", "modin", "polars", "pyarrow"]
dask = ["dask", "pandas"]
modin = ["modin", "pandas"]
pandas = ["pandas"]
polars = ["pyarrow", "polars"]
pyarrow = ["pyarrow"]

[tool.poetry.dev-dependencies]
black = "^21.4b0"
contexttimer = "^0.3.3"
dask = {extras = ["dataframe"], version = "^2021.7.0"}
docopt = "^0.6.2"
ipython = "^7.31.1"
maturin = ">=0.12,<0.13"
modin = {extras = ["dask"], version = ">=0.10.1"}
polars = ">=0.8"
pyarrow = ">=4"
pytest = "^6.2"
pytest-benchmark = "^3.4.1"
twine = "^3.4.1"
black = "^21.4b0"
google-cloud-bigquery = "^2.32.0"
google-auth = "^1.18.0"
pandas-gbq = "^0.17.0"

protobuf = "^3.19.4"

[tool.pytest.ini_options]
minversion = "6.0"
python_functions = "test_* bench_*"
# python_files = check_*.py
# python_classes = Check
# addopts = "-ra -q"
# testpaths = [
#   "tests",
#   "integration",
# ]

[build-system]
build-backend = "maturin"
requires = ["maturin>=0.12,<0.13"]
